---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bonfire--${environment_name}
spec:
  replicas: ${replicas:-1}
  template:
    spec:
      serviceAccount: bonfire--${environment_name}
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - name: web
        image: bonfirenetworks/bonfire:1.0.0-rc.1.20-open_science-amd64@sha256:8852031c1d5b7d137e31f73a66d69cde2c2a37965d7a5845e550d670197556c2
        env:
        - name: POSTGRES_HOST
          value: "${POSTGRES_HOST}"
        - name: POSTGRES_USER
          value: "${POSTGRES_USER}"
        - name: POSTGRES_DB
          value: "${POSTGRES_DB}"
        - name: POSTGRES_PASSWORD
          value: "${POSTGRES_PASSWORD}"
        - name: SECRET_KEY_BASE
          value: "${SECRET_KEY_BASE}"
        - name: SIGNING_SALT
          value: "${SIGNING_SALT}"
        - name: ENCRYPTION_SALT
          value: "${ENCRYPTION_SALT}"
        - name: HOSTNAME
          value: "${hostname}"
        - name: PUBLIC_PORT
          value: "443"
        - name: UPLOADS_S3_BUCKET
          value: ${uploads_bucket_name}
        ports:
        - name: http
          containerPort: 4000
        resource:
          requests:
            cpu: 400m
            memory: 550Mi
        livenessProbe:
          httpGet:
            path: /dashboard
            port: http
        readinessProbe:
          httpGet:
            path: /dashboard
            port: http
