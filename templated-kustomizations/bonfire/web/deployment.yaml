---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bonfire--${environment_name}
spec:
  replicas: ${replicas:-1}
  template:
    spec:
      serviceAccount: bonfire--${environment_name}
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - name: web
        image: bonfirenetworks/bonfire:latest-open_science-amd64
        env:
        - name: POSTGRES_HOST
          value: "${POSTGRES_HOST}"
        - name: POSTGRES_USER
          value: "${POSTGRES_USER}"
        - name: POSTGRES_DB
          value: "${POSTGRES_DB}"
        - name: POSTGRES_PASSWORD
          value: "${POSTGRES_PASSWORD}"
        - name: HOSTNAME
          value: "${hostname}"
        - name: PUBLIC_PORT
          value: "443"
        - name: UPLOADS_S3_BUCKET
          value: ${uploads_bucket_name}
        - name: UPLOADS_S3_REGION
          value: ${uploads_bucket_region}
        - name: UPLOADS_S3_HOST
          value: ${uploads_bucket_endpoint}
        - name: MAIL_BACKEND
          value: sendgrid
        - name: MAIL_FROM
          value: discussions@sciety.org
        - name: SEARCH_ADAPTER
          value: meili
        - name: SEARCH_MEILI_INSTANCE
          value: ${meili_search_instance}
        envFrom:
        - secretRef:
            name: ${secret_name}
        ports:
        - name: http
          containerPort: 4000
        resource:
          requests:
            cpu: 400m
            memory: 550Mi
        livenessProbe:
          httpGet:
            path: /dashboard
            port: http
        readinessProbe:
          httpGet:
            path: /dashboard
            port: http
